name: Django CI-CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.11.5]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Linting
      run: flake8 .

    - name: Run Tests with Coverage
      run: pytest --cov=.

    - name: Verify Coverage
      run: coverage report --fail-under=80 

  containerize:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4

    - name: Extract Git Commit SHA
      id: vars
      run: echo "::set-output name=commit_sha::$(git rev-parse --short HEAD)"

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/django-app:latest -t ${{ secrets.DOCKER_HUB_USERNAME }}/django-app:${{ steps.vars.outputs.commit_sha }} .

    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/django-app:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/django-app:${{ steps.vars.outputs.commit_sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: containerize
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    - uses: JorgeLNJunior/render-deploy@v1.4.4
      with:
        service_id: ${{ secrets.RENDER_SERVICE_ID }}
        api_key: ${{ secrets.RENDER_API_KEY }}
        wait_deploy: true 
